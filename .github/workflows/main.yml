
name: Build and Deploy Azure Function

on:
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/Altera.Ingestion.Initiate.Function' # Path to function app
  DOTNET_VERSION: '8.0' # .NET version

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      # 2. Login to Azure using Service Principal
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Setup .NET environment
      - name: 'Setup .NET ${{ env.DOTNET_VERSION }} Environment'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # 4. Restore Dependencies
      - name: 'Restore Dependencies'
        run: |
          pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
          dotnet restore
          popd

      # 5. Build and Generate Functions JSON
      - name: 'Build Project and Generate Functions JSON'
        run: |
          pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
          dotnet build --configuration Release /t:GenerateFunctionsJson --output ./output
          popd

      # 6. Publish and Package Function App
      - name: 'Publish and Package Function App'
        run: |
          pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
          dotnet publish --configuration Release --output ./output/publish
          popd

      # 7. Debug - Check Generated Files
      - name: 'Debug: List Contents of Publish Directory'
        run: |
          ls -R "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/publish"

      # 8. Verify function.json is Generated
      - name: 'Verify function.json'
        run: |
          FUNCTION_JSON_PATH="${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/publish/Initiate/function.json"
          if [ ! -f "$FUNCTION_JSON_PATH" ]; then
            echo "Error: function.json is missing after build and publish!"
